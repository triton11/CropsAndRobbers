<!DOCTYPE html>
<html>
<head>
  <title>Crops and Robbers!</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <%= stylesheet_link_tag "application", media: "all" %>
</head>
<body>
	<nav class="navbar navbar-expand navbar-light bg-light">
		<div class="navbar-nav" style="margin-left: auto; margin-right: auto; left: 0; right: 0;">
			<div class="m-2">
  				<%= link_to 'Home', root_path%>
  			</div>
  			<div class="m-2">
  				<%= link_to 'Refresh!', @room_path%>
  			</div>
  			<% if current_user.name == @room.leader %>
  				<div class="m-2">
					<%= link_to 'End', "/rooms/#{@room.id}/end" %>
				</div>
				<div class="m-2">
					<%= button_to 'Reset', :method => "start" %>
				</div>
			<% end %>
  	</nav>
	<div style="padding: 10px" class="container" align="center">
		<p>
		  <strong>Hello <%= current_user.name %>!</strong>
		</p>
		<p>
		  <strong>Code:</strong>
		  <%= @room.code %>
		</p>
		<% if current_user.role.blank? %>
			<p>
			  Players:
			  <br>
			  <% (@room.thief_count + @room.farmer_count + @room.investigator_count).times do |n| %>
			  	<span id='player_<%=n%>'></span> <br>
			  <% end %>
			</p>
			<% if current_user.name == @room.leader %>
				<%= button_to 'Start', :method => "start" %>
			<% end %>
		<% else %>
			<p>
				Round <%= @room.round %>
			</p>
			<p>
				You are a <%= current_user.role %>!
			</p>
			<div> You have <span id="score">0</span> crops!</div>
			<div <%= current_user.role != "thief" ? "style=display:none" : ""%>> You have <span id="lives"></span> lives!</div>
			<div id="update"></div>
			<div id="countdown"></div>
			<div id="options">
				<% if current_user.role == "thief" %>
					<%= render 'robber' %>
				<% elsif current_user.role == "farmer" %>
					<%= render 'farmer' %>
				<% elsif current_user.role == "investigator" %>
					<%= render 'investigator' %>
				<% end %>
			</div>
		<% end %>
	</div>
</body>
<script src="https://code.jquery.com/jquery-1.11.0.min.js"></script>



<script type="text/javascript">
	function getRound(room_id) {
		$.ajax({
	        type: "GET",
	        url: `/rooms/${room_id}/round`,
	        dataType: 'json',
	        success: function(result) {
	        	if (result["round"] == 0) {
	        		for (i = 0; i < result["players"].length; i++) {
					  	document.getElementById("player_"+i).innerHTML = result["players"][i]
					}
	        		result["players"]
	        		setTimeout(() => { getRound(room_id) }, 2000)
	        	} else {
					location.reload();
	        	}
	        },
	        error: function(result) {
	        	var baseUrl = document.location.origin;
	        	window.location.replace(baseUrl);
	        }
	    });
	}
	function hideEverything() {
		document.getElementById("options").style.display = "none"
	}
	function set_activity(room_id, activity, user_id, affected_id) {
		affected = affected_id
		if (affected_id == '') {
			affected = null
		}
	    $.ajax({
	        type: "POST",
	        url: `/rooms/${room_id}/${activity}/${user_id}/${affected}`,
	        success: function(result) {
	        	hideEverything()
	        },
	        error: function(result) {
	        	var baseUrl = document.location.origin;
	        	window.location.replace(baseUrl);
	        }
	    });
	};
	function check_for_next_round(room_id, round) {
		$.ajax({
	        type: "GET",
	        url: `/rooms/${room_id}/${round}/check`,
	        dataType: 'json',
	        success: function(result) {
	        	if (result["game_over"] == "true") {
	        		var baseUrl = document.location.origin;
	        		window.location.replace(baseUrl + "/rooms/" + '<%= "#{@room.id}" %>' + "/end" );
	        	} else {
	        		location.reload();
	        	}
	        },
	        error: function(result) {
	            var baseUrl = document.location.origin;
	        	window.location.replace(baseUrl);
	        }
	    });
	}

	var startTimer = function() {
		document.getElementById("countdown").style.display = "block"
		//View of timer uses seconds, and the ruby time is rounded to nearest second
		timeleft = parseInt((<%= Integer(1e3*@room.round_end.to_f) %> - Date.now())/1000)
		var downloadTimer = setInterval(function(){
		  	document.getElementById("countdown").innerHTML = timeleft + " seconds remaining";
		  	if(timeleft <= 0){
		    	clearInterval(downloadTimer);
		    	document.getElementById("countdown").innerHTML = " "
		    	document.getElementById("countdown").style.display = "none"
		    	check_for_next_round(<%= @room.id %>,<%= @room.round %>)
		 	}
		  timeleft -= 1;
		}, 1000);
	}

	if (<%= @room.round %> < 1) {
		setTimeout(() => { getRound(<%= @room.id %>) }, 2000)
	} else {
		document.getElementById("score").innerHTML = <%= current_user.score %>
	    document.getElementById("lives").innerHTML = <%= current_user.lives %>
	    document.getElementById("update").innerHTML = '<%= "#{current_user.last_round_notice}" %>'
		startTimer()
	}
</script>
</html>